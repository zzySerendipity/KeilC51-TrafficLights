C51 COMPILER V9.60.7.0   MAIN                                                              05/01/2025 21:44:28 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.l
                    -st) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <REGX51.H>
   2          #include "Delay.h"
   3          #include "LCD.h"
   4          
   5          #define uchar unsigned char
   6          #define uint unsigned int
   7                  
   8          sbit Emergency = P3^2;
   9          sbit      Test = P1^3;
  10          bit    Emergency_Flag;
  11                  
  12          // ÂàùÂßãÂåñ‰∏≤Âè£Ôºà11.0592MHzÊô∂ÊåØÔºåÊ≥¢ÁâπÁéá9600Ôºâ
  13          void UART_Init() 
  14          {
  15   1          TMOD &= 0x0F;       // Ê∏ÖÈô§ÂÆöÊó∂Âô®1Ê®°Âºè‰Ωç
  16   1          TMOD |= 0x20;       // ÂÆöÊó∂Âô®1ËÆæ‰∏∫Ê®°Âºè2Ôºà8‰ΩçËá™Âä®ÈáçËΩΩÔºâ
  17   1          TH1 = 0xFD;         // Ê≥¢ÁâπÁéá9600ÔºàËÆ°ÁÆóÂÖ¨ÂºèÔºö(256 - TH1) * 12 / 11.0592MHz = Ê≥¢ÁâπÁéáÂë®ÊúüÔ
             -ºâ
  18   1          TL1 = 0xFD;
  19   1          TR1 = 1;            // ÂêØÂä®ÂÆöÊó∂Âô®1
  20   1          
  21   1          // ‰∏≤Âè£ÊéßÂà∂ÂØÑÂ≠òÂô®ÈÖçÁΩÆ
  22   1          SCON = 0x50;        // Ê®°Âºè1Ôºà8‰ΩçUARTÔºâÔºåÂÖÅËÆ∏Êé•Êî∂ÔºàREN=1Ôºâ
  23   1          PCON &= 0x7F;       // SMOD=0ÔºàÊ≥¢ÁâπÁéá‰∏çÂÄçÂ¢ûÔºâ
  24   1          
  25   1          // ‰∏çÂºÄÂêØ‰∏≠Êñ≠ÔºàÁ∫ØÂèëÈÄÅÁ§∫‰æãÔºâ
  26   1          ES = 0;             // Á¶ÅÁî®‰∏≤Âè£‰∏≠Êñ≠
  27   1          EA = 1;             // ÂÖ®Â±Ä‰∏≠Êñ≠‰ΩøËÉΩÔºàÂèØÈÄâÔºâ
  28   1      }
  29          
  30          void UART_SendChar(unsigned char ch) 
  31          {
  32   1          SBUF = ch;          // ÂÜôÂÖ•ÂèëÈÄÅÁºìÂÜ≤Âå∫
  33   1          while(!TI);         // Á≠âÂæÖÂèëÈÄÅÂÆåÊàêÔºàTI=1Ôºâ
  34   1          TI = 0;             // ÊâãÂä®Ê∏ÖÈô§ÂèëÈÄÅ‰∏≠Êñ≠Ê†áÂøó
  35   1      }
  36          
  37          void EmergencyState() 
  38          {
  39   1              string(0x83,"Emergency!");
  40   1              string(0xC0,"Send Signal ....");
  41   1              Delay(100);
  42   1              write_command(0x01);
  43   1              Delay(100);     
  44   1      }
  45          void DefaultState() 
  46          {
  47   1              string(0x81,"Traffic Light.");
  48   1              string(0xC1,"Center Control");
  49   1              Delay(100);
  50   1              write_command(0x01);
  51   1              Delay(100);             
  52   1      }
  53          
C51 COMPILER V9.60.7.0   MAIN                                                              05/01/2025 21:44:28 PAGE 2   

  54          
  55          void main(void)
  56          {
  57   1              lcd_initial();
  58   1              UART_Init();
  59   1              IP   |= 0x01;                           // ‰∏≠Êñ≠‰ºòÂÖàÁ∫ß INT0 > TIMER0
  60   1              IT0 = 1;                                        // ‰∏ãÈôçÊ≤ø
  61   1              EX0 = 1;                                        // ÂÖÅËÆ∏Â§ñÈÉ®‰∏≠Êñ≠0
  62   1              EA  = 1;                                        // ‰∏≠Êñ≠ÊÄªÂÖÅËÆ∏
  63   1              Test = 0;
  64   1              Emergency_Flag = 0;
  65   1              while(1)
  66   1              {
  67   2                      if(Emergency_Flag){
  68   3                              EmergencyState();
  69   3                      }
  70   2                      else{
  71   3                              DefaultState();
  72   3                      }
  73   2              }
  74   1      }
  75          
  76          // Â§ñÈÉ®‰∏≠Êñ≠ÂáΩÊï∞
  77          // ‰∏ÄÊó¶ÊúâINT0:ModeÁöÑ‰∏ãÈôçÊ≤øÂ∞±‰ºöËøõÂÖ•,ËøõÂÖ•ÂêéEmergency_FlagÁΩÆ1,ËøõÂÖ•Á¥ßÊÄ•Áä∂ÊÄÅ
  78          void Int0_Routine() interrupt 0
  79          {
  80   1              Emergency_Flag = ~Emergency_Flag;
  81   1              if(Emergency_Flag){
  82   2                      UART_SendChar('E');             // Emergency
  83   2                      Test = 1;
  84   2              }
  85   1              else {
  86   2                      UART_SendChar('N');             // Normal
  87   2                      Test = 0;
  88   2              }
  89   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    180    ----
   CONSTANT SIZE    =     58    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
